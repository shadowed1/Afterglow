RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
BLUE=$(tput setaf 4)
MAGENTA=$(tput setaf 5)
CYAN=$(tput setaf 6)
BOLD=$(tput bold)
RESET=$(tput sgr0)

export XDG_RUNTIME_DIR="${XDG_RUNTIME_DIR:-$HOME/.xdg-runtime-dir}"
mkdir -p "$XDG_RUNTIME_DIR/doc/portal"
chmod 700 "$XDG_RUNTIME_DIR"
echo 3 > "$XDG_RUNTIME_DIR/doc/portal/version"

export USER="${USER:-$(id -un)}"

if [ -f "$HOME/opt/flatpak.env" ]; then
    . "$HOME/opt/flatpak.env"
fi

echo "${MAGENTA}Aurora initializing Flatpak!${RESET}${BLUE}"

if [ ! -S "$XDG_RUNTIME_DIR/dbus-session" ]; then
  dbus-daemon --session \
    --address="unix:path=$XDG_RUNTIME_DIR/dbus-session" \
    --print-address=1 \
    --nopidfile \
    --nofork > "$XDG_RUNTIME_DIR/dbus-session.address" &
  sleep 1
fi

export TMPDIR="$HOME/tmp"
mkdir -p "$XDG_RUNTIME_DIR" "$TMPDIR"
chmod 700 "$XDG_RUNTIME_DIR"

  export DBUS_SESSION_BUS_ADDRESS=$(grep -E '^unix:' "$XDG_RUNTIME_DIR/dbus-session.address" | head -n1 | tr -d '\n')

if [ -x "$HOME/opt/flatpak-deps/usr/lib/xdg-desktop-portal-gtk" ] && [ -n "$USER" ] && ! pgrep -u "$USER" -f xdg-desktop-portal-gtk > /dev/null; then
  "$HOME/opt/flatpak-deps/usr/lib/xdg-desktop-portal-gtk" &
fi
if [ -x "$HOME/opt/flatpak-deps/usr/lib/xdg-desktop-portal" ] && [ -n "$USER" ] && ! pgrep -u "$USER" -f xdg-desktop-portal$ > /dev/null; then
  "$HOME/opt/flatpak-deps/usr/lib/xdg-desktop-portal" &
fi

flatpak --user remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
flatpak --user update --appstream

echo "${RESET}${CYAN}Flatpak ready!${RESET}"

MARKER="# Flatpak --user logic"
if ! grep -q "$MARKER" "$HOME/.bashrc"; then
cat << 'EOF' >> "$HOME/.bashrc"
# Flatpak --user logic
flatpak() {
  case "$1" in
    ""|--help|-h|help|--version)
      command flatpak "$@"
      ;;
    install)
      if [[ "$*" == *"com.valvesoftware.Steam"* ]]; then
        echo "${RED}Installing com.valvesoftware.Steam is blocked to protect your Steam install.${RESET}"
        return 1
      fi
      command flatpak --user "$@"
      ;;
    *)
      command flatpak --user "$@"
      ;;
  esac
}

aurora() {
  local AURORA_SCRIPT="$HOME/opt/bin/aurora"

  "$AURORA_SCRIPT" "$@"

  case "$1" in
    display|cursor)
      if [ -x "$AURORA_SCRIPT" ]; then
        source <("$AURORA_SCRIPT" print-env)
      fi
      ;;
  esac
}

EOF
echo ""
echo "${BOLD}${CYAN}Aurora has successfully finished setting up Flatpak! Reinitializing .bashrc to enable --user shortcut...${RESET}"
sleep 2
echo ""
source ~/.bashrc
fi
