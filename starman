#!/bin/bash
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
BLUE=$(tput setaf 4)
MAGENTA=$(tput setaf 5)
CYAN=$(tput setaf 6)
BOLD=$(tput bold)
RESET=$(tput sgr0)

if [ -f "$HOME/opt/.flatpak.env" ]; then
    . "$HOME/opt/.flatpak.env"
fi

starman() {
    local URL="$1"

    if [[ -z "$URL" ]]; then
        echo "${RED}Error: You must provide a URL to download.${RESET}" >&2
        echo "Usage: starman https://archlinux.org/packages/extra/x86_64/composefs/download ~/opt/flatpak-deps"
        return 1
    fi

    local FILE="$HOME/$(basename "$URL")"
    local EXPORT_PATH="${STARMAN_EXPORT_PATH:-$HOME/opt/bin}"
    echo "${YELLOW}Downloading to: $FILE${RESET}"
    curl -L "$URL" -o "$FILE"

    if [[ ! -f "$FILE" ]]; then
        echo "${RED}Failed to download file.${RESET}" >&2
        return 1
    fi

    mkdir -p "$EXPORT_PATH"
    echo "${YELLOW}Extracting to: $EXPORT_PATH${RESET}"

    local ext="${FILE##*.}"
    local decompress_cmd=""

    case "$FILE" in
        *.tar.gz|*.tgz)     decompress_cmd="gzip -d" ;;
        *.tar.bz2|*.tbz2)   decompress_cmd="bzip2 -d" ;;
        *.tar.xz|*.txz)     decompress_cmd="xz -d" ;;
        *.tar.zst|*.tzst)   decompress_cmd="unzstd" ;;
        *.tar.lz4)          decompress_cmd="lz4 -d" ;;
        *.tar.lzma)         decompress_cmd="lzma -d" ;;
        *.tar.lz)           decompress_cmd="lzip -d" ;;
        *.tar.Z)            decompress_cmd="uncompress" ;;
        *.tar)              decompress_cmd="" ;;  # No compression
        *)
            echo "${RED}Unknown compression format: $FILE${RESET}" >&2
            return 1
            ;;
    esac

    if [[ -n "$decompress_cmd" ]]; then
        tar --use-compress-program="$decompress_cmd" -xvf "$FILE" -C "$EXPORT_PATH"
    else
        tar -xvf "$FILE" -C "$EXPORT_PATH"
    fi

    echo "Cleaning up..."
    rm -f "$FILE"
    echo "${GREEN}Done.${RESET}"
}

reset_app_list() {
    rm -f "$HOME/.starman_flatpak_cache"
    echo "${YELLOW}Flatpak app list cache cleared.${RESET}"
}


show_help() {
    echo "${YELLOW}"
    echo "Commands with examples:"
    eco ""
    echo "starman https://archlinux.org/packages/extra/x86_64/composefs/download ~/opt/flatpak-deps"
    echo "Default path if unset: ~/opt/bin"
    echo "${RESET}"
}

zenity_launcher() {
    local ICON_SIZES=("256" "128")
    local ICON_OUTPUT_BASE="$HOME/.local/share/icons/hicolor"
    local APP_LIST_FILE="$HOME/.starman_flatpak_cache"
    local MENU_ENTRIES=()

    MENU_ENTRIES+=("Open File" "Browse or open a file")
    MENU_ENTRIES+=("Download Archive" "Download and extract .tar.* file (starman)")

    if [[ ! -f "$APP_LIST_FILE" ]]; then
        flatpak --user list --columns=application,name | tail -n +1 | sort -u > "$APP_LIST_FILE"
    fi

    while IFS=$'\t' read -r APPID NAME; do
        [[ -z "$APPID" || "$APPID" == "Application" ]] && continue

        local ICON_PATH=""
        for SIZE in "${ICON_SIZES[@]}"; do
            local TRY_ICON="$ICON_OUTPUT_BASE/${SIZE}x${SIZE}/apps/$APPID.png"
            if [[ -f "$TRY_ICON" ]]; then
                ICON_PATH="$TRY_ICON"
                break
            fi
        done

        if [[ -n "$ICON_PATH" ]]; then
            MENU_ENTRIES+=("$APPID" "Launch $NAME via Flatpak")
        fi

    done < "$APP_LIST_FILE"

    MENU_ENTRIES+=("Exit" "Close this menu")

    local CHOICE
    CHOICE=$(zenity --list --title="Starman App Launcher" \
      --width=800 --height=600 \
      --column="Action" --column="Description" \
      "${MENU_ENTRIES[@]}")

    case "$CHOICE" in
        "File Manager")
            zenity --file-selection --title="Browse"
            ;;
        "Download Archive")
            FILE_URL=$(zenity --entry --title="Starman Archive Downloader:" --text="Enter the URL of the .tar archive and your path of choice:")
            if [[ -n "$FILE_URL" ]]; then
                starman "$FILE_URL"
            fi
            ;;
        "Exit"|"")
            exit 0
            ;;
        *)
            flatpak --user run "$CHOICE" &
            ;;
    esac
}


reset_app_list() {
    rm -f "$HOME/.starman_flatpak_cache"
    echo "${YELLOW}Flatpak app list cache cleared.${RESET}"
}


case "$1" in
    starman)
        shift
        starman "$@"
        ;;
    --h|-h|help)
        show_help
        ;;
    ""|status)
        zenity_launcher
        ;;
     reset)
        reset_app_list
        ;;
    *)
        echo "${RED}Unknown command '$1'${RESET}"
        show_help
        exit 1
        ;;
esac
